import { requestGetData } from '@ui/services/client/request';

/**
 * API Handler cho HTTP GET request.
 *
 * - Nh·∫≠n m·ªôt **slug** t·ª´ URL parameters (`params.slug`).
 * - G·ª≠i request ƒë·∫øn **Google Cloud Storage** ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ file JSON.
 * - Tr·∫£ v·ªÅ response JSON ch·ª©a d·ªØ li·ªáu ho·∫∑c th√¥ng b√°o l·ªói n·∫øu request th·∫•t b·∫°i.
 *
 * @param {Request} request - ƒê·ªëi t∆∞·ª£ng Request c·ªßa API.
 * @param {{ params: Promise<{ slug: string }> }} context - Context ch·ª©a params, trong ƒë√≥ `slug` l√† tham s·ªë URL.
 * @return {Promise<Response>} Tr·∫£ v·ªÅ m·ªôt **Promise** ch·ª©a Response JSON:
 *  - `{ data, code: 200, status: 1 }` n·∫øu th√†nh c√¥ng.
 *  - `{ error: "Failed to read appInfos.json" }` n·∫øu th·∫•t b·∫°i.
 */

export async function GET(
  request: Request,
  { params }: { params: Promise<{ slug: string }> }
): Promise<Response> {
  const slug = (await params).slug;

  try {
    const data = await requestGetData({
      url: `/asvab/web-data/topic-${slug}.json?t=${new Date().getTime()}`,
      config: {
        baseURL:
          'https://storage.googleapis.com/micro-enigma-235001.appspot.com',
      },
    });

    return Response.json({
      data: data,
      code: 200,
      status: 1,
    });
  } catch (error) {
    console.log('üöÄ ~ error:', error);

    return Response.json({ error: 'Failed to read appInfos.json' });
  }
}
